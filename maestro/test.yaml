name: gns

default_env: &default-env
  CONFIG: /root/gns.d/gns.yaml
  RULES_DIR: /root/rules
  REPO_DIR: /root/rules.git
  REPO_URL: https://github.yandex-team.ru/monitoring/gns-rules
  ELASTICSEARCH_URL: !!python/object/apply:os.getenv [ELASTICSEARCH_URL, 'http://elasticlog.yandex.net:9200']
  YA_SMS_URL: !!python/object/apply:os.getenv [YA_SMS_URL, 'https://golem.yandex-team.ru/api/sms/send.sbml']
  EMAIL_FROM: !!python/object/apply:os.getenv [EMAIL_FROM, 'gns@gns']

volumes: &volumes
  /root/rules.git: /tmp/gns-rules.git
  /root/rules: /tmp/gns-rules

gns-image: &gns-image nikicat/gns-ut
zookeeper-image: &zookeeper-image nikicat/zookeeper-ut

registries:
  docker-3:
    registry: http://docker-3.i.fog.yandex.net/v1/
    email: nbryskin@yandex-team.ru
    username: stub
    password: stub

ships:
  docker-1:
    ip: &ship-1 !!python/object/apply:os.getenv [SHIP_1, docker-1.i.fog.yandex.net]
    timeout: 15
  docker-2:
    ip: &ship-2 !!python/object/apply:os.getenv [SHIP_2, docker-2.i.fog.yandex.net]
    timeout: 15
  docker-3:
    ip: &ship-3 !!python/object/apply:os.getenv [SHIP_3, docker-3.i.fog.yandex.net]
    timeout: 15

services:
  zookeeper:
    image: *zookeeper-image
    instances:
      zk-1: &zk
        ship: docker-1
        ports: {client: 2181, peer: 2888, leader_election: 3888}
        volumes:
          /var/lib/zookeeper: /data/zookeeper
      zk-2:
        <<: *zk
        ship: docker-2
      zk-3:
        <<: *zk
        ship: docker-3
  exim:
    image: nikicat/exim-ut
    instances:
      exim-1: &exim
        ship: docker-1
        ports: {smtp: 25}
      exim-2:
        <<: *exim
        ship: docker-2
      exim-3:
        <<: *exim
        ship: docker-3
#  gns-reinit:
#    image: *gns-image
#    instances:
#      gns-reinit:
#        ship: docker-1
#        env:
#          MODULE: reinit
  gns-fetcher:
    image: *gns-image
    requires:
      - zookeeper
    instances:
      gns-fetcher-1: &gns-fetcher
        ship: docker-1
        env:
          <<: *default-env
          MODULE: fetcher
        volumes: *volumes
      gns-fetcher-2:
        <<: *gns-fetcher
        ship: docker-2
      gns-fetcher-3:
        <<: *gns-fetcher
        ship: docker-3
  gns-api:
    image: *gns-image
    requires:
      - zookeeper
    instances:
      gns-api-1: &gns-api
        ship: docker-1
        ports: {http: 7887}
        env:
          <<: *default-env
          MODULE: api
      gns-api-2:
        <<: *gns-api
        ship: docker-2
      gns-api-3:
        <<: *gns-api
        ship: docker-3
  gns-splitter:
    image: *gns-image
    requires:
      - zookeeper
    instances:
      gns-splitter-1: &gns-splitter
        ship: docker-1
        env:
          <<: *default-env
          MODULE: splitter
        volumes: *volumes
      gns-splitter-2:
        <<: *gns-splitter
        ship: docker-2
      gns-splitter-3:
        <<: *gns-splitter
        ship: docker-3
  gns-worker:
    image: *gns-image
    requires:
      - zookeeper
      - exim
    instances:
      gns-worker-1: &gns-worker
        ship: docker-1
        env:
          <<: *default-env
          MODULE: worker
          SMTP_HOST: *ship-1
        volumes: *volumes
      gns-worker-2:
        <<: *gns-worker
        ship: docker-2
        env:
          <<: *default-env
          MODULE: worker
          SMTP_HOST: *ship-2
      gns-worker-3:
        <<: *gns-worker
        ship: docker-3
        env:
          <<: *default-env
          MODULE: worker
          SMTP_HOST: *ship-2
  gns-collector:
    image: *gns-image
    requires:
      - zookeeper
    instances:
      gns-collector-1: &gns-collector
        ship: docker-1
        env:
          <<: *default-env
          MODULE: collector
      gns-collector-2:
        <<: *gns-collector
        ship: docker-2
      gns-collector-3:
        <<: *gns-collector
        ship: docker-3
